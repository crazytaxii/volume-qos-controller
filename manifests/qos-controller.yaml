---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: qos-controller
  namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: qos-controller-role
rules:
  - apiGroups:
      - ""
      - "storage.k8s.io"
    resources:
      - persistentvolumeclaims
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "coordination.k8s.io"
      - ""
    resources:
      - leases
      - events
    verbs:
      - create
      - get
      - list
      - update

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: qos-controller-global
subjects:
  - kind: ServiceAccount
    name: qos-controller
    namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: qos-controller-role

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: qos-controller-config
  namespace: kube-system
data:
  config.yaml: |
    leaderElection:
      leaderElect: true
      leaseDuration: 30s
      renewDeadline: 15s
      resyncPeriod: 5s
      resourceName: qos-controller-leader-lock
      resourceLock: endpointsleases
      resourceNamespace: kube-system
    controllerConfig:
      cephRBD:
        provisioner: rook-ceph.rbd.csi.ceph.com
        monitors: 172.18.29.164:6789,172.18.29.165:6789,172.18.29.173:6789
        user: admin
        key: AQALxIVjaVbsNRAAGm54ScmSE9obj9F/jVhGaw==

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qos-controller
  namespace: kube-system
  labels:
    app: qos-controller
spec:
  replicas: 2
  selector:
    matchLabels:
      app: qos-controller
  template:
    metadata:
      labels:
        app: qos-controller
    spec:
      hostNetwork: true
      containers:
        - name: qos-controller
          image: crazytaxii/volume-qos-controller:latest
          command:
            - qos-controller
          args:
            - run
            - --config-file=/etc/qos-controller/config.yaml
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
          volumeMounts:
            - name: config
              mountPath: /etc/qos-controller
              readOnly: true
      serviceAccountName: qos-controller
      volumes:
        - name: config
          configMap:
            name: qos-controller-config
            items:
              - key: config.yaml
                path: config.yaml
